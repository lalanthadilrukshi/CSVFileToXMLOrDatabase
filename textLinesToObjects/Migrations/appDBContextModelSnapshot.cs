// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using textLinesToObjects.Context;

namespace textLinesToObjects.Migrations
{
    [DbContext(typeof(appDBContext))]
    partial class appDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("textLinesToObjects.Models.AllstarFull", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("gameID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("gameNum")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("startingPos")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("AllstarFull");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Appearances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_1b")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_2b")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_3b")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_all")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_batting")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_c")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_cf")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_defense")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_dh")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_lf")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_of")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_p")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_ph")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_pr")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_rf")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G_ss")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Appearances");
                });

            modelBuilder.Entity("textLinesToObjects.Models.AwardsManagers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("awardID")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("notes")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("tie")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("AwardsManagers");
                });

            modelBuilder.Entity("textLinesToObjects.Models.AwardsPlayers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("awardID")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("notes")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("tie")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("AwardsPlayers");
                });

            modelBuilder.Entity("textLinesToObjects.Models.AwardsShareManagers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("awardID")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("pointsMax")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("pointsWon")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("votesFirst")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("AwardsShareManagers");
                });

            modelBuilder.Entity("textLinesToObjects.Models.AwardsSharePlayers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("awardID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("pointsMax")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("pointsWon")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<string>("votesFirst")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("AwardsSharePlayers");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Batting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("B2")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("B3")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("BB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("GIDP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("H")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("HBP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("HR")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("IBB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("R")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("RBI")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SF")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SH")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SO")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stint")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Batting");
                });

            modelBuilder.Entity("textLinesToObjects.Models.BattingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("B2")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("B3")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("BB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("GIDP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("H")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("HBP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("HR")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("IBB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("R")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("RBI")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SF")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SH")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SO")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("round")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("BattingPost");
                });

            modelBuilder.Entity("textLinesToObjects.Models.CollegePlaying", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("schoolID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("CollegePlaying");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Fielding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("A")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("DP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("E")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("GS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("InnOuts")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("PB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("PO")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("POS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("WP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("ZR")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stint")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Fielding");
                });

            modelBuilder.Entity("textLinesToObjects.Models.FieldingOF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Gcf")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Glf")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Grf")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stint")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("FieldingOF");
                });

            modelBuilder.Entity("textLinesToObjects.Models.FieldingOFsplit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("A")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CS")
                        .HasColumnType("longtext");

                    b.Property<string>("DP")
                        .HasColumnType("longtext");

                    b.Property<string>("E")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("GS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("InnOuts")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("PB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("PO")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("POS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("WP")
                        .HasColumnType("longtext");

                    b.Property<string>("ZR")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stint")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("FieldingOFsplit");
                });

            modelBuilder.Entity("textLinesToObjects.Models.FieldingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("A")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("DP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("E")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("GS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("InnOuts")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("PB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("PO")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("POS")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SB")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("TP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("round")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("FieldingPost");
                });

            modelBuilder.Entity("textLinesToObjects.Models.HallOfFame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GP")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("gameID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("gameNum")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("startingPos")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("HallOfFame");
                });

            modelBuilder.Entity("textLinesToObjects.Models.HomeGames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("attendance")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("games")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("league_key")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("openings")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("park_key")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("span_first")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("span_last")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team_key")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("year_key")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("HomeGames");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Managers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("G")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("L")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("W")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("inseason")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("plyrMgr")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("rank")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("textLinesToObjects.Models.ManagersHalf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("G")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("L")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("W")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("half")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("inseason")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("rank")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("ManagersHalf");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Parks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("country")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("park_alias")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("park_key")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("park_name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("state")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("textLinesToObjects.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("bats")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("bbrefID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("birthCity")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("birthCountry")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("birthDay")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("birthMonth")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("birthState")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("birthYear")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("deathCity")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("deathCountry")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("deathDay")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("deathMonth")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("deathState")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("deathYear")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("debut")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("finalGame")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("height")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("nameFirst")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("nameGiven")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("nameLast")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("retroID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("startingPos")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("throws")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("weight")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Pitching", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BAOpp")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BB")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BFP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BK")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CG")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ER")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ERA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GIDP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GS")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("H")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HBP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HR")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IBB")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IPouts")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("L")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("R")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SH")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SHO")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SO")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SV")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("W")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stint")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Pitching");
                });

            modelBuilder.Entity("textLinesToObjects.Models.PitchingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BAOpp")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BB")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BFP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BK")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CG")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ER")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ERA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GIDP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GS")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("H")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HBP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HR")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IBB")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IPouts")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("L")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("R")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SH")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SHO")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SO")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SV")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("W")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("round")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("PitchingPost");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Salaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("playerID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("salary")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Schools", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("country")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("name_full")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("schoolID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("state")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("textLinesToObjects.Models.SeriesPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("lgIDloser")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("lgIDwinner")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("losses")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("round")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamIDloser")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("teamIDwinner")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ties")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("wins")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SeriesPost");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BPF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DivWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ghome")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LgWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PPF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rank")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WCWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WSWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("attendance")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("divID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("franchID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("park")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamIDBR")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamIDlahman45")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamIDretro")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("textLinesToObjects.Models.Teams2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AB")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("B2")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("B3")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BB")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BBA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BPF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CG")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CS")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DivWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("E")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ER")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ERA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ghome")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("H")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HBP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HR")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HRA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IPouts")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("L")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LgWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PPF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("R")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rank")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SB")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SF")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SHO")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SO")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SOA")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SV")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("W")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WCWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WSWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("attendance")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("divID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("franchID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("park")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamIDBR")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamIDlahman45")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamIDretro")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Teams2");
                });

            modelBuilder.Entity("textLinesToObjects.Models.TeamsFranchises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NAassoc")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("active")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("franchID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("franchName")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TeamsFranchises");
                });

            modelBuilder.Entity("textLinesToObjects.Models.TeamsHalf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DivWin")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("G")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Half")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("L")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rank")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("W")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("divID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("TeamsHalf");
                });

            modelBuilder.Entity("textLinesToObjects.Models.games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("attendance")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("awayTeam")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("awayTeamScore")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("date")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("gameId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("homeTeam")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("homeTeamScore")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("rainfall")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("round")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("startTime")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("venue")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("year")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("games");
                });

            modelBuilder.Entity("textLinesToObjects.Models.nfl_stadiums", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ELEVATION")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LATITUDE")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LONGITUDE")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NAME")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("STATION")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stadium_address")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("stadium_capacity")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("stadium_close")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("stadium_location")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("stadium_name")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stadium_open")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("stadium_surface")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("stadium_type")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stadium_weather_station_code")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("stadium_weather_type")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("nfl_stadiums");
                });

            modelBuilder.Entity("textLinesToObjects.Models.nfl_teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("team_conference")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team_conference_pre2002")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team_division")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team_division_pre2002")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team_id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team_id_pfr")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team_name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("team_name_short")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("nfl_teams");
                });

            modelBuilder.Entity("textLinesToObjects.Models.players", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("displayName")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("dob")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("height")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("origin")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("playerId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("position")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("weight")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("players");
                });

            modelBuilder.Entity("textLinesToObjects.Models.racingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BPF")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("DivWin")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Ghome")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("LgWin")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("PPF")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Rank")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("WCWin")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("WSWin")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("attendance")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("divID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("franchID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("lgID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("park")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("teamID")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamIDBR")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamIDlahman45")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("teamIDretro")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("yearID")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("racingdata");
                });

            modelBuilder.Entity("textLinesToObjects.Models.spreadspoke_scores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("over_under_line")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("schedule_date")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("schedule_playoff")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("schedule_season")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("schedule_week")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("score_away")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("score_home")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("spread_favorite")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stadium")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("stadium_neutral")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("startingPos")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("team_away")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("team_favorite_id")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("team_home")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("weather_detail")
                        .HasColumnType("varchar()");

                    b.Property<string>("weather_humidity")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("weather_temperature")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("weather_wind_mph")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("spreadspoke_scores");
                });

            modelBuilder.Entity("textLinesToObjects.Models.stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Behinds")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Bounces")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Brownlow_Votes")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Clangers")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Clearances")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Contested_Marks")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Contested_Possessions")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Disposals")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Frees")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Frees_Against")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Goal_Assists")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Goals")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Handballs")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Hit_Outs")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Inside_50s")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Kicks")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Marks")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Marks_Inside_50")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("One_Percenters")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Percentage_Played")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Rebounds")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Subs")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Tackles")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Uncontested_Possessions")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("displayName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("gameId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("gameNumber")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("playerId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("round")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("team")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("year")
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("stats");
                });
#pragma warning restore 612, 618
        }
    }
}
